import { ethers } from "hardhat";
import { prepareInputs } from "../../test/utils/state-utils";

async function main() {
  const groth16VerifierContract = await ethers.getContractAt(
    "Groth16VerifierV3Wrapper",
    "0x94BD14D2eDC0F78Ec51780cb6C06cfEA5eE2f3d9",
  );
  console.log("Submitting proof to Groth16VerifierV3Wrapper...");
  const jsonProof = {
    id: "1766847064778384848774503903277701057664923553150306959495349798740162883",
    circuitId: "credentialAtomicQueryV3OnChain-beta.1",
    proof: {
      pi_a: [
        "19216698943995881536467438976255145066117342212086053547004920219466270835933",
        "16812674723450859309698679165296114205679072429266442094305516729598627498925",
        "1",
      ],
      pi_b: [
        [
          "2719540313173633861555421666165951873572331376548581790543238788654051551439",
          "804827370749704609814157761995692684503230317827306961845106467331341624328",
        ],
        [
          "9413051822202300705675277343004888973960358667001671318036993299033205651588",
          "143785458397386943059993661557003665761025228557546688346595743020948491375",
        ],
        ["1", "0"],
      ],
      pi_c: [
        "6495841308209005977462935099675637838408152653497379283951927728795137281436",
        "2539476284465547571390965528680099911555013158903373993931533534444903238909",
        "1",
      ],
      protocol: "groth16",
      curve: "bn128",
    },
    pub_signals: [
      "21673682315500606770216217236361793129204560053792578606692428956428030465",
      "14269590020162247624697549264280988226443582809667296964001711108738429282249",
      "15204044154861027985799819612996094031620433951451229330994164767550803554542",
      "0",
      "7001310985615618788035259439939117451658345204922150271394992238934558759524",
      "0",
      "1",
      "1766847064778384848774503903277701057664923553150306959495349798740162883",
      "1397738411366811577672750727150514215345254087370",
      "0",
      "19450027436906808598733474944478006388219978643758688014300016516391457281",
      "15204044154861027985799819612996094031620433951451229330994164767550803554542",
      "1752674750",
      "1",
    ],
  };
  const { inputs, pi_a, pi_b, pi_c } = prepareInputs(jsonProof);
  console.log("Verifying Groth16 proof...");
  const verified = await groth16VerifierContract.verify(pi_a, pi_b, pi_c, inputs);
  console.log("Verified: ", verified);

  const verifierContract = await ethers.getContractAt(
    "UniversalVerifierTestWrapper_ManyResponsesPerUserAndRequest",
    "0xfa1d72bbEBdEBc16d00e6e51B164746B297de688",
  );

  /*const verifierContract = await ethers.getContractAt(
    "UniversalVerifier",
    "0xc89fA32a60aa91f0AbB2225c9e338bf8F634F20d",
  );*/

  console.log("Submitting response to UniversalVerifier...");
  const tx = await verifierContract.submitResponse(
    {
      authMethod: "authV2",
      proof:
        "0x00000000000000000000000000000000000000000000000000000000000001202e56085f0420f33d794a53c8fb32ea11a7f6a1635180529e9ccf492b5cd713d9057fc549cf821243566f894d14a12a793aa43f57bafa37b87c3c682c99e1b82008652cb34b572db8093ad0c161107342f5600c50b2d0e5e970a7eaea9acff7851d01161376d6a712016b1b87f563109c1d4721081960ed497fb9c42f92ddfbdc182000f7554f8629146f73be15bc2315cf1ddb934204a91c2dd501f43c1fa29111ae4aa121a457caae40c67fad731b8a9842b82647d8e838540f805013a30c0b139026e2b1fdfec6fefaf007446a39e94d262fe6d76231636666c38ff395d7ef27aba10b36117f098a614373b9ad3208a6d7f62757c7a09907002f5e100b73980000000000000000000000000000000000000000000000000000000000000003000eae5805d00d00df6ced06c2f5d9c16ce0e215ad36fd92af41cf12e923520107c4085fc71348d41ee67889ffb04885d20b3ebc0d10ffff797b652486a510200be0cef9b604d4289cb559b9ef0f8977c74c6596a2e7969747d75714be20290a",
    },
    [
      {
        requestId: 1766847064778384848774503903277701057664923553150306959495349798740162883n,
        proof:
          "0x000000000000000000000000000000000000000000000000000000000000012017822f04247bf3dcdb16d10dab2ac64e909dad77c77cc92630f7df2cc22c10341ebaea7370cffd6363d0685e55863bf884cab4a37c6e249463cc139f3fbb788b2b6d0475f4c41b673dfb59824efcaea01778cda7e45698a79424888343fc14fd19a78d778d8392a6ac4f42534d262cd652276bdeb2b2ab0c00edfea582e183ec03a7ceaf4b093316bc25bd53c86af6ec2dd1c8423b2f96674c813933a72aa195297738411ef9ef63d2580a617edef8380afd86998355c8dc09f46217032d76750dc795bdff9bdca504a8974b4d30649d94efce8d9532c10b0dd54223882d77f3274c915338cdf17079821e9c3e3a43e95807e582395c493ba1497ba9df12dfd7000000000000000000000000000000000000000000000000000000000000000e000eae5805d00d00df6ced06c2f5d9c16ce0e215ad36fd92af41cf12e92352011f8c4d3eb4ab2668e472674f8e0d4ac81e7f9e5476c2b6811992e29220a4e7c90f373405563d105f31c8e5453d3d33c58ad6d4c06ca9a4c5fc40291386331f7900000000000000000000000000000000000000000000000000000000000000000c1d1bbe4c5f0c1784fcfda7fb1664ab744b890d44631b13c004212f0c593c7a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010001000000000000152c9bef2bda46a492321a6650097ddf1eca56eae253f943000000000000000000000000f4d4c21038f6ae5eaba3d9c819b4bc680ae4baca0be0cef9b604d4289cb559b9ef0f8977c74c6596a2e7969747d75714be20290a000c400f373405563d105f31c8e5453d3d33c58ad6d4c06ca9a4c5fc402952010f373405563d105f31c8e5453d3d33c58ad6d4c06ca9a4c5fc40291386331f79000000000000000000000000000000000000000000000000000000006878e4f90000000000000000000000000000000000000000000000000000000000000001",
        metadata: "0x",
      },
    ],
    "0x",
    {
      gasPrice: 50000000000,
      gasLimit: 10000000,
    },
  );
  console.log("Waiting for tx to be mined...");

  await tx.wait();
  console.log("Ok!!!!");
}

main()
  .then(() => process.exit(0))
  .catch((error) => {
    console.error(error);
    process.exit(1);
  });
