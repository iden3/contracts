import { ethers } from "hardhat";
import { prepareInputs } from "../../test/utils/state-utils";

async function main() {
  const groth16VerifierContract = await ethers.getContractAt(
    "Groth16VerifierV3Wrapper",
    "0x94BD14D2eDC0F78Ec51780cb6C06cfEA5eE2f3d9",
  );
  console.log("Submitting proof to Groth16VerifierV3Wrapper...");
  const jsonProof = {
    id: "1766847064778384848774503903277701057664923553150306959495349798740162883",
    circuitId: "credentialAtomicQueryV3OnChain-beta.1",
    proof: {
      pi_a: [
        "19216698943995881536467438976255145066117342212086053547004920219466270835933",
        "16812674723450859309698679165296114205679072429266442094305516729598627498925",
        "1",
      ],
      pi_b: [
        [
          "2719540313173633861555421666165951873572331376548581790543238788654051551439",
          "804827370749704609814157761995692684503230317827306961845106467331341624328",
        ],
        [
          "9413051822202300705675277343004888973960358667001671318036993299033205651588",
          "143785458397386943059993661557003665761025228557546688346595743020948491375",
        ],
        ["1", "0"],
      ],
      pi_c: [
        "6495841308209005977462935099675637838408152653497379283951927728795137281436",
        "2539476284465547571390965528680099911555013158903373993931533534444903238909",
        "1",
      ],
      protocol: "groth16",
      curve: "bn128",
    },
    pub_signals: [
      "21673682315500606770216217236361793129204560053792578606692428956428030465",
      "14269590020162247624697549264280988226443582809667296964001711108738429282249",
      "15204044154861027985799819612996094031620433951451229330994164767550803554542",
      "0",
      "7001310985615618788035259439939117451658345204922150271394992238934558759524",
      "0",
      "1",
      "1766847064778384848774503903277701057664923553150306959495349798740162883",
      "1397738411366811577672750727150514215345254087370",
      "0",
      "19450027436906808598733474944478006388219978643758688014300016516391457281",
      "15204044154861027985799819612996094031620433951451229330994164767550803554542",
      "1752674750",
      "1",
    ],
  };
  const { inputs, pi_a, pi_b, pi_c } = prepareInputs(jsonProof);
  console.log("Verifying Groth16 proof...");
  const verified = await groth16VerifierContract.verify(pi_a, pi_b, pi_c, inputs);
  console.log("Verified: ", verified);

  const verifierContract = await ethers.getContractAt(
    "UniversalVerifierTestWrapper_ManyResponsesPerUserAndRequest",
    "0xfa1d72bbEBdEBc16d00e6e51B164746B297de688",
  );

  /*const verifierContract = await ethers.getContractAt(
    "UniversalVerifier",
    "0xc89fA32a60aa91f0AbB2225c9e338bf8F634F20d",
  );*/

  console.log("Submitting response to UniversalVerifier...");
  const tx = await verifierContract.submitResponse(
    {
      authMethod: "authV2",
      proof:
        "0x00000000000000000000000000000000000000000000000000000000000001200542dd98a8969ffddf467b4ab3729e8bd0a981681a4c29be8a3c3caec67285ec23c2d8b471fcc9d559fb6aca014858ef1b89d0a3651f66667d8fd06dae230b5c2428491057b81be290b7453b1c969c3335baee5257685e6fb7ecc854c77775fe2afd6dd943cc13d728ae2cc8fa8e868999015d873df1f55d87567242c6de086d25774e0ef2744a84c141e669752d9a1c1b3b2ac5610c9f548eb6183a261a17c7130491ce0fe25dfb13c76f4dc132abddd5a1dbb14dfa0b796d75dcd689eec6800c7d5d9f9be49e450e4372bea1172c22a677e7af456f1908521706d5b24dad65288256440e8b71efc9873b40d48ea7981f1b449b90a7469359ff9ced9252f3ad0000000000000000000000000000000000000000000000000000000000000003000ef5c06b79b3291f0708b462e2d28e13e3e1be2c2ff847e1df7b8dc2e352010682c525e467f8d3f1a5e0d876c27e4968e744c3d346037d7e81457e3cd9cb820be0cef9b604d4289cb559b9ef0f8977c74c6596a2e7969747d75714be20290a",
    },
    [
      {
        requestId: 1766847064778384848774503903277701057664923553150306959495349798740162883n,
        proof:
          "0x000000000000000000000000000000000000000000000000000000000000012030005bfe50109ba27cfc2567d9d6240a11f29a2f634ad9498574a42b8637facd28ccf0b7140cbcfa0c5dab0f3ad33e21ab69a013523c4c63eda60504ee51bf08074954fe964d234f676db0adebdbdeddd7ff73dc9a34113ae4cf65a637794b2308021f80d5c7aa8c7fcb3584e37208ea08c37511651c5ec024ce278f9e6194940a42e5e5da620c405c3508ed53a4b5789bccd4e638e65c5cb4d84819f2723b231f2cdb5fc01971099062d49e10f19ecd20bea891544516f594ab6d530387368a1d60baa9371ad4358eec4bc2ade1da2d1fb6c07ef633c75dcca9ae9b3a8b30a91b2ea0933505dd528a01c5c76543c5d41ce32f3918918324af00072e95adb964000000000000000000000000000000000000000000000000000000000000000e000ef5c06b79b3291f0708b462e2d28e13e3e1be2c2ff847e1df7b8dc2e352011f8c4d3eb4ab2668e472674f8e0d4ac81e7f9e5476c2b6811992e29220a4e7c915bd6eab78383671d4e90d853cb6cd88e4073e33b83119ccc41cc32c6cdeccf1000000000000000000000000000000000000000000000000000000000000000024c73ca9fcc9f02eb99d5efc51efbb764ad1401b522f3c4f642beef48e06e645000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010001000000000000152c9bef2bda46a492321a6650097ddf1eca56eae253f943000000000000000000000000f4d4c21038f6ae5eaba3d9c819b4bc680ae4baca0be0cef9b604d4289cb559b9ef0f8977c74c6596a2e7969747d75714be20290a000cf815bd6eab78383671d4e90d853cb6cd88e4073e33b83119ccc41cc3520115bd6eab78383671d4e90d853cb6cd88e4073e33b83119ccc41cc32c6cdeccf1000000000000000000000000000000000000000000000000000000006877cfcd0000000000000000000000000000000000000000000000000000000000000001",
        metadata: "0x",
      },
    ],
    "0x",
    {
      gasPrice: 50000000000,
      gasLimit: 10000000,
    },
  );
  console.log("Waiting for tx to be mined...");

  await tx.wait();
  console.log("Ok!!!!");
}

main()
  .then(() => process.exit(0))
  .catch((error) => {
    console.error(error);
    process.exit(1);
  });
