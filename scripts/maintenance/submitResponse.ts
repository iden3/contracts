import { ethers } from "hardhat";
import { prepareInputs } from "../../test/utils/state-utils";

async function main() {
  const groth16VerifierContract = await ethers.getContractAt(
    "Groth16VerifierV3Wrapper",
    "0x94BD14D2eDC0F78Ec51780cb6C06cfEA5eE2f3d9",
  );
  console.log("Submitting proof to Groth16VerifierV3Wrapper...");
  const jsonProof = {
    id: "1766847064778384848774503903277701057664923553150306959495349798740162883",
    circuitId: "credentialAtomicQueryV3OnChain-beta.1",
    proof: {
      pi_a: [
        "19216698943995881536467438976255145066117342212086053547004920219466270835933",
        "16812674723450859309698679165296114205679072429266442094305516729598627498925",
        "1",
      ],
      pi_b: [
        [
          "2719540313173633861555421666165951873572331376548581790543238788654051551439",
          "804827370749704609814157761995692684503230317827306961845106467331341624328",
        ],
        [
          "9413051822202300705675277343004888973960358667001671318036993299033205651588",
          "143785458397386943059993661557003665761025228557546688346595743020948491375",
        ],
        ["1", "0"],
      ],
      pi_c: [
        "6495841308209005977462935099675637838408152653497379283951927728795137281436",
        "2539476284465547571390965528680099911555013158903373993931533534444903238909",
        "1",
      ],
      protocol: "groth16",
      curve: "bn128",
    },
    pub_signals: [
      "21673682315500606770216217236361793129204560053792578606692428956428030465",
      "14269590020162247624697549264280988226443582809667296964001711108738429282249",
      "15204044154861027985799819612996094031620433951451229330994164767550803554542",
      "0",
      "7001310985615618788035259439939117451658345204922150271394992238934558759524",
      "0",
      "1",
      "1766847064778384848774503903277701057664923553150306959495349798740162883",
      "1397738411366811577672750727150514215345254087370",
      "0",
      "19450027436906808598733474944478006388219978643758688014300016516391457281",
      "15204044154861027985799819612996094031620433951451229330994164767550803554542",
      "1752674750",
      "1",
    ],
  };
  const { inputs, pi_a, pi_b, pi_c } = prepareInputs(jsonProof);
  console.log("Verifying Groth16 proof...");
  const verified = await groth16VerifierContract.verify(pi_a, pi_b, pi_c, inputs);
  console.log("Verified: ", verified);

  const verifierContract = await ethers.getContractAt(
    "UniversalVerifierTestWrapper_ManyResponsesPerUserAndRequest",
    "0xfa1d72bbEBdEBc16d00e6e51B164746B297de688",
  );

  /*const verifierContract = await ethers.getContractAt(
    "UniversalVerifier",
    "0xc89fA32a60aa91f0AbB2225c9e338bf8F634F20d",
  );*/

  console.log("Submitting response to UniversalVerifier...");
  const tx = await verifierContract.submitResponse(
    {
      authMethod: "authV2",
      proof:
        "0x00000000000000000000000000000000000000000000000000000000000001202a32717dece9fc207f97b51b386e54b318edc5155e3d595ce2a413a112197fc618026dc0f2590c47a288cb576f98d11c1be4fcd640d9a23fd04a933e5b7e01472a881747ddef073766d12497a3939064cd39a8defec06d543e8cd9e5de86fa311a0ee678745e1f20ce43c6516a7625dfb394be129757434bedcaf895b5095d842cae84b360ececa1b39644a6f4764f30f93eafb844d03a26df655ed2216f80dd0d02954c2e9833f0bfc982c8d0c6516f4c698040ded1569aa50391fa757ad28e27f5b0895deff176330e4cb1bb593ef3d9f1ee8ae24fedaef8fdd577f38b714f21b1493e73a02a930fb3e4bbba9649f74f771e06bbc4e8888f66b6726c4b64560000000000000000000000000000000000000000000000000000000000000003000c6f1081f99b882f46bb9794214edf35fa1e64b318c4c78525282608bf52010d44e5d57f1a2b49500710ef411eab4c0c51e5d2fc80ded468afe336b67a45d90be0cef9b604d4289cb559b9ef0f8977c74c6596a2e7969747d75714be20290a",
    },
    [
      {
        requestId: 1766847064778384848774503903277701057664923553150306959495349798740162883n,
        proof:
          "0x000000000000000000000000000000000000000000000000000000000000012015ed7430fe88abef8e1919dd7c12b9741302c31ed39950e4b0601e068a9477362d990539450b408b2628fdcb9d790927d4dcc2fb4e94bbb8bfb9c06b92c179a12b8ba79ecf1613d551cc51137fc2eb0795fd6fe5a1a218e41ee61bd526e5d8500036848df458d28d126b6fac35375c3c21d60ee07b50fb8f7a9d8111b089d0870ed599bf1cbb57c288faff55ce1e144186a9f25427af11eba746521d603a0b3a2c380b38e9c1068540fdc1274f01a55af157400b6064f47b214f154830a0babe05ba5f4c1b6b8ce1db747a6b7dfb8c6614c3d12876d6fd98bce8655d948af1152f13c451d443f9e6c44fc2f9818f887a003b4a3d8b944cb5bce9d4d5fa2d2e3c000000000000000000000000000000000000000000000000000000000000000e000c6f1081f99b882f46bb9794214edf35fa1e64b318c4c78525282608bf52011f8c4d3eb4ab2668e472674f8e0d4ac81e7f9e5476c2b6811992e29220a4e7c9181796679862ce3e54e256d8e64e3c99e22736b422139a3b99e803a3fa45b5e300000000000000000000000000000000000000000000000000000000000000002edc261f3e84efd04b15e757663b167e21bb701c2826003afec27ff22106ffb1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010001000000000000152c9bef2bda46a492321a6650097ddf1eca56eae253f943000000000000000000000000f4d4c21038f6ae5eaba3d9c819b4bc680ae4baca0be0cef9b604d4289cb559b9ef0f8977c74c6596a2e7969747d75714be20290a000c73181796679862ce3e54e256d8e64e3c99e22736b422139a3b99e8035201181796679862ce3e54e256d8e64e3c99e22736b422139a3b99e803a3fa45b5e30000000000000000000000000000000000000000000000000000000068789c620000000000000000000000000000000000000000000000000000000000000001",
        metadata: "0x",
      },
    ],
    "0x",
    {
      gasPrice: 50000000000,
      gasLimit: 10000000,
    },
  );
  console.log("Waiting for tx to be mined...");

  await tx.wait();
  console.log("Ok!!!!");
}

main()
  .then(() => process.exit(0))
  .catch((error) => {
    console.error(error);
    process.exit(1);
  });
